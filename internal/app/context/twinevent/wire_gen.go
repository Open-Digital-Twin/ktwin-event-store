// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package twinevent

import (
	"agwermann/dt-service/internal/app/context/twinevent/controller"
	"agwermann/dt-service/internal/app/context/twinevent/domain/repository"
	"agwermann/dt-service/internal/app/context/twinevent/usecase"
	"agwermann/dt-service/internal/app/infra/db"
	"agwermann/dt-service/internal/app/infra/validator"
)

// Injectors from wire.go:

func InitializeTwinEventContainer() TwinEventContainer {
	twinEventMapper := repository.NewTwinEventMapper()
	dbConnection := db.NewDBConnection()
	twinEventRepository := repository.NewTwinEventRepository(twinEventMapper, dbConnection)
	twinEventUseCase := usecase.NewTwinEventUseCase(twinEventRepository)
	validatorValidator := validator.NewValidator()
	twinEventController := controller.NewTwinEventController(twinEventUseCase, validatorValidator)
	twinEventContainer := NewTwinEventContainer(twinEventController, twinEventRepository, twinEventUseCase)
	return twinEventContainer
}

// wire.go:

func NewTwinEventContainer(controller2 controller.TwinEventController, repository2 repository.TwinEventRepository,

	useCase usecase.TwinEventUseCase,
) TwinEventContainer {
	return TwinEventContainer{
		Controller: controller2,
		Repository: repository2,
		UseCase:    useCase,
	}
}

type TwinEventContainer struct {
	Controller controller.TwinEventController
	Repository repository.TwinEventRepository
	UseCase    usecase.TwinEventUseCase
}
